Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodsi4.o)
                              ./uart.o (__divmodsi4)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_negsi2.o)
                              /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodsi4.o) (__negsi2)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32u4.o (exit)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
                              ./uart.o (__do_copy_data)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                              ./main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_cmpdi2_s8.o)
                              ./nrf.o (__cmpdi2_s8)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodsi4.o)
                              /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodsi4.o) (__udivmodsi4)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a(memcpy_P.o)
                              ./nrf.o (memcpy_P)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a(itoa_ncheck.o)
                              ./main.o (__itoa_ncheck)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a(utoa_ncheck.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a(itoa_ncheck.o) (__utoa_common)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a(utoa_ncheck.o) (strrev)

Allocating common symbols
Common symbol       size              file

nrf_tx_pipe_map     0x8               ./nrf.o
rx                  0x20              ./nrf.o
buffer              0x14              ./main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32u4.o
LOAD ./main.o
LOAD ./nrf.o
LOAD ./spi.o
LOAD ./uart.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libatmega32u4.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xdac
 *(.vectors)
 .vectors       0x0000000000000000       0xac /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32u4.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x00000000000000ac                . = ALIGN (0x2)
                0x00000000000000ac                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000ac        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000ac                __trampolines_end = .
 *(.progmem*)
 .progmem.data.setup_data
                0x00000000000000ac      0x273 ./nrf.o
 .progmem.data.string_celsius
                0x000000000000031f        0x5 ./nrf.o
 .progmem.data.string_temperature
                0x0000000000000324        0xe ./nrf.o
 .progmem.data.string_received
                0x0000000000000332       0x1a ./nrf.o
 .progmem.data.string_connection
                0x000000000000034c       0x12 ./nrf.o
 .progmem.data.string_pipes_open
                0x000000000000035e        0xd ./nrf.o
 .progmem.data.string_pipe_closed
                0x000000000000036b       0x10 ./nrf.o
 .progmem.data.string_advertising
                0x000000000000037b       0x17 ./nrf.o
                0x0000000000000392                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000392                __ctors_start = .
 *(.ctors)
                0x0000000000000392                __ctors_end = .
                0x0000000000000392                __dtors_start = .
 *(.dtors)
                0x0000000000000392                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000392        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32u4.o
                0x0000000000000392                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000392        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32u4.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000039e       0x16 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
                0x000000000000039e                __do_copy_data
 .init4         0x00000000000003b4       0x10 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                0x00000000000003b4                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000003c4        0x8 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32u4.o
 *(.init9)
 *(.text)
 .text          0x00000000000003cc        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32u4.o
                0x00000000000003cc                __vector_38
                0x00000000000003cc                __vector_22
                0x00000000000003cc                __vector_28
                0x00000000000003cc                __vector_1
                0x00000000000003cc                __vector_32
                0x00000000000003cc                __vector_34
                0x00000000000003cc                __vector_24
                0x00000000000003cc                __vector_12
                0x00000000000003cc                __bad_interrupt
                0x00000000000003cc                __vector_6
                0x00000000000003cc                __vector_31
                0x00000000000003cc                __vector_35
                0x00000000000003cc                __vector_39
                0x00000000000003cc                __vector_3
                0x00000000000003cc                __vector_23
                0x00000000000003cc                __vector_30
                0x00000000000003cc                __vector_25
                0x00000000000003cc                __vector_11
                0x00000000000003cc                __vector_13
                0x00000000000003cc                __vector_17
                0x00000000000003cc                __vector_19
                0x00000000000003cc                __vector_7
                0x00000000000003cc                __vector_41
                0x00000000000003cc                __vector_27
                0x00000000000003cc                __vector_5
                0x00000000000003cc                __vector_33
                0x00000000000003cc                __vector_37
                0x00000000000003cc                __vector_4
                0x00000000000003cc                __vector_9
                0x00000000000003cc                __vector_2
                0x00000000000003cc                __vector_21
                0x00000000000003cc                __vector_15
                0x00000000000003cc                __vector_36
                0x00000000000003cc                __vector_29
                0x00000000000003cc                __vector_40
                0x00000000000003cc                __vector_8
                0x00000000000003cc                __vector_26
                0x00000000000003cc                __vector_14
                0x00000000000003cc                __vector_10
                0x00000000000003cc                __vector_16
                0x00000000000003cc                __vector_18
                0x00000000000003cc                __vector_20
                0x00000000000003cc                __vector_42
 .text          0x00000000000003d0        0x0 ./main.o
 .text          0x00000000000003d0        0x0 ./nrf.o
 .text          0x00000000000003d0        0x0 ./spi.o
 .text          0x00000000000003d0        0x0 ./uart.o
 .text          0x00000000000003d0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodsi4.o)
 .text          0x00000000000003d0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_negsi2.o)
 .text          0x00000000000003d0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text          0x00000000000003d0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text          0x00000000000003d0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text          0x00000000000003d0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_cmpdi2_s8.o)
 .text          0x00000000000003d0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodsi4.o)
 .text          0x00000000000003d0        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a(memcpy_P.o)
 .text          0x00000000000003d0        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a(itoa_ncheck.o)
 .text          0x00000000000003d0        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a(utoa_ncheck.o)
 .text          0x00000000000003d0        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a(strrev.o)
                0x00000000000003d0                . = ALIGN (0x2)
 *(.text.*)
 .text.GetAdc_value
                0x00000000000003d0       0x18 ./main.o
                0x00000000000003d0                GetAdc_value
 .text.uart_sendstr
                0x00000000000003e8       0x1c ./main.o
                0x00000000000003e8                uart_sendstr
 .text.ADCsetup
                0x0000000000000404       0x14 ./main.o
                0x0000000000000404                ADCsetup
 .text.sendNRF  0x0000000000000418        0x2 ./main.o
                0x0000000000000418                sendNRF
 .text.startup.main
                0x000000000000041a       0x60 ./main.o
                0x000000000000041a                main
 .text.nrf_tx_map_pipes
                0x000000000000047a        0xc ./nrf.o
                0x000000000000047a                nrf_tx_map_pipes
 .text.nrf_close_tx_pipes
                0x0000000000000486       0xec ./nrf.o
                0x0000000000000486                nrf_close_tx_pipes
 .text.nrf_transmit
                0x0000000000000572       0xa2 ./nrf.o
                0x0000000000000572                nrf_transmit
 .text.nrf_advertise
                0x0000000000000614       0x24 ./nrf.o
                0x0000000000000614                nrf_advertise
 .text.nrf_parse
                0x0000000000000638      0x1d0 ./nrf.o
                0x0000000000000638                nrf_parse
 .text.nrf_send_button_data
                0x0000000000000808       0x64 ./nrf.o
                0x0000000000000808                nrf_send_button_data
 .text.nrf_print_rx
                0x000000000000086c       0x4e ./nrf.o
                0x000000000000086c                nrf_print_rx
 .text.nrf_setup
                0x00000000000008ba      0x17a ./nrf.o
                0x00000000000008ba                nrf_setup
 .text.nrf_reset_module
                0x0000000000000a34       0x16 ./nrf.o
                0x0000000000000a34                nrf_reset_module
 .text.nrf_print_temperature
                0x0000000000000a4a       0xb6 ./nrf.o
                0x0000000000000a4a                nrf_print_temperature
 .text.spi_init
                0x0000000000000b00        0xe ./spi.o
                0x0000000000000b00                spi_init
 .text.spi_transmit
                0x0000000000000b0e        0xc ./spi.o
                0x0000000000000b0e                spi_transmit
 .text.uart_init
                0x0000000000000b1a       0x18 ./uart.o
                0x0000000000000b1a                uart_init
 .text.uart_putchar
                0x0000000000000b32        0xe ./uart.o
                0x0000000000000b32                uart_putchar
 .text.uart_newline
                0x0000000000000b40        0xc ./uart.o
                0x0000000000000b40                uart_newline
 .text.uart_print_pgm
                0x0000000000000b4c       0x22 ./uart.o
                0x0000000000000b4c                uart_print_pgm
 .text.uart_putint
                0x0000000000000b6e       0xfc ./uart.o
                0x0000000000000b6e                uart_putint
 .text.uart_puthex
                0x0000000000000c6a       0x28 ./uart.o
                0x0000000000000c6a                uart_puthex
 .text.libgcc.mul
                0x0000000000000c92        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodsi4.o)
 .text.libgcc.div
                0x0000000000000c92       0x2e /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodsi4.o)
                0x0000000000000c92                __divmodsi4
 .text.libgcc   0x0000000000000cc0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodsi4.o)
 .text.libgcc.prologue
                0x0000000000000cc0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodsi4.o)
 .text.libgcc.builtins
                0x0000000000000cc0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodsi4.o)
 .text.libgcc.fmul
                0x0000000000000cc0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodsi4.o)
 .text.libgcc.fixed
                0x0000000000000cc0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodsi4.o)
 .text.libgcc.mul
                0x0000000000000cc0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_negsi2.o)
 .text.libgcc.div
                0x0000000000000cc0       0x10 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_negsi2.o)
                0x0000000000000cc0                __negsi2
 .text.libgcc   0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_negsi2.o)
 .text.libgcc.prologue
                0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_negsi2.o)
 .text.libgcc.builtins
                0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_negsi2.o)
 .text.libgcc.fmul
                0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_negsi2.o)
 .text.libgcc.fixed
                0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_negsi2.o)
 .text.libgcc.mul
                0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_cmpdi2_s8.o)
 .text.libgcc.div
                0x0000000000000cd0        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_cmpdi2_s8.o)
 .text.libgcc   0x0000000000000cd0       0x18 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_cmpdi2_s8.o)
                0x0000000000000cd0                __cmpdi2_s8
 .text.libgcc.prologue
                0x0000000000000ce8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_cmpdi2_s8.o)
 .text.libgcc.builtins
                0x0000000000000ce8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_cmpdi2_s8.o)
 .text.libgcc.fmul
                0x0000000000000ce8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_cmpdi2_s8.o)
 .text.libgcc.fixed
                0x0000000000000ce8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_cmpdi2_s8.o)
 .text.libgcc.mul
                0x0000000000000ce8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x0000000000000ce8       0x44 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodsi4.o)
                0x0000000000000ce8                __udivmodsi4
 .text.libgcc   0x0000000000000d2c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x0000000000000d2c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x0000000000000d2c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x0000000000000d2c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fixed
                0x0000000000000d2c        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodsi4.o)
 .text.avr-libc
                0x0000000000000d2c       0x12 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a(memcpy_P.o)
                0x0000000000000d2c                memcpy_P
 .text.avr-libc
                0x0000000000000d3e       0x16 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a(itoa_ncheck.o)
                0x0000000000000d3e                __itoa_ncheck
 .text.avr-libc
                0x0000000000000d54       0x34 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a(utoa_ncheck.o)
                0x0000000000000d54                __utoa_ncheck
                0x0000000000000d56                __utoa_common
 .text.avr-libc
                0x0000000000000d88       0x20 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a(strrev.o)
                0x0000000000000d88                strrev
                0x0000000000000da8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000da8        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                0x0000000000000da8                exit
                0x0000000000000da8                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000da8        0x4 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000dac                _etext = .

.data           0x0000000000800100       0x12 load address 0x0000000000000dac
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32u4.o
 .data          0x0000000000800100        0x0 ./main.o
 .data          0x0000000000800100        0x0 ./nrf.o
 .data          0x0000000000800100        0x0 ./spi.o
 .data          0x0000000000800100        0x0 ./uart.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodsi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_negsi2.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_cmpdi2_s8.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a(memcpy_P.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a(itoa_ncheck.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a(utoa_ncheck.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a(strrev.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.hexvals
                0x0000000000800100       0x11 ./uart.o
 *(.gnu.linkonce.d*)
                0x0000000000800112                . = ALIGN (0x2)
 *fill*         0x0000000000800111        0x1 
                0x0000000000800112                _edata = .
                0x0000000000800112                PROVIDE (__data_end, .)

.bss            0x0000000000800112       0xa7
                0x0000000000800112                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800112        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32u4.o
 .bss           0x0000000000800112        0x0 ./main.o
 .bss           0x0000000000800112        0x0 ./nrf.o
 .bss           0x0000000000800112        0x0 ./spi.o
 .bss           0x0000000000800112        0x0 ./uart.o
 .bss           0x0000000000800112        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_divmodsi4.o)
 .bss           0x0000000000800112        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_negsi2.o)
 .bss           0x0000000000800112        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800112        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800112        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800112        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_cmpdi2_s8.o)
 .bss           0x0000000000800112        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_udivmodsi4.o)
 .bss           0x0000000000800112        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a(memcpy_P.o)
 .bss           0x0000000000800112        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a(itoa_ncheck.o)
 .bss           0x0000000000800112        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a(utoa_ncheck.o)
 .bss           0x0000000000800112        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a(strrev.o)
 *(.bss*)
 .bss.dummy_rx  0x0000000000800112       0x20 ./nrf.o
 .bss.dummy_tx  0x0000000000800132       0x20 ./nrf.o
 .bss.tx        0x0000000000800152       0x20 ./nrf.o
 .bss.pipes_open
                0x0000000000800172        0x8 ./nrf.o
 .bss.pipes     0x000000000080017a        0x1 ./nrf.o
 .bss.opmode    0x000000000080017b        0x1 ./nrf.o
 .bss.nrf_connect_state
                0x000000000080017c        0x1 ./nrf.o
                0x000000000080017c                nrf_connect_state
 *(COMMON)
 COMMON         0x000000000080017d       0x14 ./main.o
                0x000000000080017d                buffer
 COMMON         0x0000000000800191       0x28 ./nrf.o
                0x0000000000800191                nrf_tx_pipe_map
                0x0000000000800199                rx
                0x00000000008001b9                PROVIDE (__bss_end, .)
                0x0000000000000dac                __data_load_start = LOADADDR (.data)
                0x0000000000000dbe                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008001b9        0x0
                0x00000000008001b9                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008001b9                PROVIDE (__noinit_end, .)
                0x00000000008001b9                _end = .
                0x00000000008001b9                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 ./nrf.o
 .comment       0x0000000000000011       0x12 ./spi.o
 .comment       0x0000000000000011       0x12 ./uart.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32u4.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(testavr.elf elf32-avr)
LOAD linker stubs
